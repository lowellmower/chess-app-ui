
<div class="col-md-9">
  <div class="chess-holder">
    <div class="col-sm-2 timer-holder clock" style="font-size: 20px;">
      <div class="button-holder">
    <span class="glyphicon glyphicon-hourglass button-glyphs"></span>  <p>Player <b>1</b></p><span class="glyphicon glyphicon-minus button-glyphs"></span>
      </div>
        <div class="time-box">
          <div id="time0" class="time-digits"></div>
        </div>
        <div class="space-keeper">
          <p class="line-break"></p>
          <div class="player-info">
            <div class="user-header">
               <p><span class="glyphicon glyphicon-user button-glyphs"></span>ryanG360</p><br><br>
            </div>
            <p>Brooklyn, NY</p><br>
            <p>Ranking: 2400</p><br>
            <p>User Rank:
              <span class="glyphicon glyphicon-star"></span>
              <span class="glyphicon glyphicon-star"></span>
              <span class="glyphicon glyphicon-star"></span>

            </p>
          </div>
        </div>
        <div class="button-holder second-button-holder">
        <span class="glyphicon glyphicon-hourglass button-glyphs"></span><p>Player <b>2</b></p><span class="glyphicon glyphicon-minus button-glyphs"></span>
        </div>
        <div class="time-box">
          <div id="time1" class="time-digits"></div>
        </div>
        <div class="space-keeper">
          <p class="line-break"></p>
          <div class="player-info">
            <div class="user-header">
               <p><span class="glyphicon glyphicon-user button-glyphs"></span>tGold108</p><br><br>
            </div>
            <p>Long Beach, NY</p><br>
            <p>Ranking: 1200</p><br>
            <p>User Rank
              <span class="glyphicon glyphicon-star"></span>
              <span class="glyphicon glyphicon-star"></span>
              <span class="glyphicon glyphicon-star"></span>
              <span class="glyphicon glyphicon-star"></span>
            </p>
          </div>
        </div>
    </div>
    <div class="col-sm-8" id="board" style="width: 537px"></div>
    <!-- <p>Status: <span id="status"></span></p>
    <p>FEN: <span id="fen"></span></p>
    <p>PGN: <span id="pgn"></span></p> -->
    <div class="col-sm-2 captured-pieces">
      <div class="white-pieces">
        <div class="button-holder">
          <span class="glyphicon glyphicon-ok-circle button-glyphs"></span><p>Captured Black</p>
        </div>
      </div>
      <div class="space-bottom"></div>
      <div class="black-pieces">
        <div class="button-holder">
        <span class="glyphicon glyphicon-ok-circle button-glyphs"></span><p>Captured White</p>
        </div>
      </div>
      <div class="space-bottom"></div>
    </div>
  </div>
</div>

<div class="sidebar-nav col-md-3">
  <div class="table-holder container-sm">
  <table class="table text-holder">
    <tbody class="text-list">
    </tbody>
  </table>
  </div>
  <div class="buttons">
    <button class="btn"><span class="glyphicon glyphicon-hand-right button-glyphs"></span><li> <%= link_to 'DRAW', "#", style: 'text-decoration: none; color: white;' %></li></button>
    <td></td>
    <button class="btn"><span class="glyphicon glyphicon-flag button-glyphs"></span><li> <%= link_to 'QUIT', "#", style: 'text-decoration: none; color: white;' %></li></button>
  </div>
</div>

<div class="bottom-row"></div>
<div class="popup-chatbox"><p>OPEN CHAT</p><span class="glyphicon glyphicon-plus button-glyphs"></span></div>

<%= form_for [@room, @move], remote: true do |f| %>
  <div class="field">
    <%= f.text_field :notation, id: 'move-notation' %>
  </div>
  <div class="field">
    <%= f.text_field :room_id  %>
  </div>
  <div class="field">
    <%= f.text_field :user_id, id: 'move-user' %>
  </div>
  <div class="field">
    <%= f.text_field :piece, id: 'move-piece'  %>
  </div>
  <div class="actions">
    <%= f.submit "", :id => 'move-submit' %>
  </div>
<% end %>

<script src="/assets/chess.js"></script>
<script>
var board,
  game = new Chess(),
  statusEl = $('#status'),
  fenEl = $('#fen'),
  pgnEl = $('#pgn');

// do not pick up pieces if the game is over
// only pick up pieces for the side to move
var onDragStart = function(source, piece, position, orientation) {
  if (game.game_over() === true ||
      (game.turn() === 'w' && "<%= current_user.id %>" === "<%= @room.player2_id %>") ||
      (game.turn() === 'b' && "<%= current_user.id %>" === "<%= @room.player1_id %>") || 
      (game.turn() === 'w' && piece.search(/^b/) !== -1) ||
      (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
    return false;
  }
};

var onDrop = function(source, target) {
  // see if the move is legal
  var move = game.move({
    from: source,
    to: target,
    promotion: 'q' // NOTE: always promote to a queen for example simplicity
  });

  // illegal move
  if (move === null) return 'snapback';



  updateStatus(source, target);
};

// update the board position after the piece snap
// for castling, en passant, pawn promotion
var onSnapEnd = function() {
  board.position(game.fen());
};

var updateStatus = function(source, target) {
  var status = '';

  var moveColor = 'White';
  if (game.turn() === 'b') {
    moveColor = 'Black';
  }

  // checkmate?
  if (game.in_checkmate() === true) {
    status = 'Game over, ' + moveColor + ' is in checkmate.';
  }

  // draw?
  else if (game.in_draw() === true) {
    status = 'Game over, drawn position';
  }

  // game still on
  else {
    status = moveColor + ' to move';

    // check?
    if (game.in_check() === true) {
      status += ', ' + moveColor + ' is in check';
    }
  }

  statusEl.html(status);
  fenEl.html(game.fen());
  pgnEl.html(game.pgn());
  $('#move-notation').val(source + '-' + target);
  $('#move-piece').val(game.fen());
  $('#move-user').val('<%= current_user.id %>')
  $('#move-submit').submit();
};

var cfg = {
  draggable: true,
  showNotation: false,
  position: 'start',
  snapSpeed: 100,
  snapbackSpeed: 400,
  moveSpeed: 'slow',
  pieceTheme: "/assets/{piece}.png",
  onDragStart: onDragStart,
  onDrop: onDrop,
  onSnapEnd: onSnapEnd
};
board = new ChessBoard('board', cfg);

updateStatus();
</script>
<script>
$(function() {
  if ("<%= current_user.id %>" === "<%= @room.player2_id %>") {
    board.orientation('black');
  }
  console.log("<%= current_user.id %>")
  console.log("<%= @room.player1_id %>")
  console.log("<%= @room.player2_id %>")

  var pusher = new Pusher('42b5fd3755f8e9edc491');
  var channelName = 'private-conversation.' + "<%= current_user ? current_user.id.to_s : 'null' %>";
  var channel = pusher.subscribe(channelName);
  console.log(channel);

  channel.bind('new_move', function(data) {
    console.log(data.fen);
    console.log(data.object_notation);
    console.log(game.turn());

    onDrop(data.object_notation.split('-')[0], data.object_notation.split('-')[1]);
    board.move(data.object_notation);


  });
})

</script>
